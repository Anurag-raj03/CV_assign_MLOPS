name: RPS MLOps CI/CD Pipeline 

on:
  push:
    branches:
      - "main"

jobs:
  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install DVC with S3 Support
        run: pip install dvc[s3]

      - name: ðŸ”§ Configure DVC Remote for S3
        run: |
          dvc remote modify --local myremote access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          dvc remote modify --local myremote secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          dvc remote modify --local myremote region ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Pull DVC Data from S3
        run: dvc pull

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Clean up Docker space before build
        run: |
          echo "Cleaning Docker cache before build..."
          docker system prune -af || true
          docker volume prune -f || true
          df -h

      - name: Build and Push Docker Images
        run: |
          docker compose -f docker-compose.build.yml build
          docker compose -f docker-compose.build.yml push

      - name: Upload deploy compose file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy-compose-file
          path: docker-compose.deploy.yml

      - name: Upload .env file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: env-file
          path: .env

      - name: Upload artifacts folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: artifacts

  deploy:
    name: Deploy on EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download docker-compose.deploy.yml
        uses: actions/download-artifact@v4
        with:
          name: deploy-compose-file
          path: .


      - name: Download artifacts folder
        uses: actions/download-artifact@v4
        with:
          name: model-artifacts
          path: ./artifacts

      - name: Upload files to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            docker-compose.deploy.yml
            .env
            artifacts
          target: "~/Rock_Paper_Scissors_MLOPS"

      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e

            cd ~/Rock_Paper_Scissors_MLOPS

            echo "Ensuring Docker is available..."
            if ! command -v docker &> /dev/null; then
              sudo apt update && sudo apt install -y docker.io
              sudo systemctl enable --now docker
              sudo usermod -aG docker $USER
            fi

            if ! command -v docker-compose &> /dev/null; then
              sudo apt install -y docker-compose
            fi

            echo "ðŸ§¹ Cleaning Docker before pull..."
            docker system prune -af || true
            docker volume prune -f || true
            df -h

            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            echo "Pulling latest images..."
            docker pull anuragraj03/rock_paper_scissors:custom-airflow
            docker pull anuragraj03/rock_paper_scissors:backend_process
            docker pull anuragraj03/rock_paper_scissors:frontend_run
            docker pull anuragraj03/rock_paper_scissors:src_run

            echo "Restarting services..."
            docker-compose -f docker-compose.deploy.yml down
            docker-compose -f docker-compose.deploy.yml up -d --remove-orphans
